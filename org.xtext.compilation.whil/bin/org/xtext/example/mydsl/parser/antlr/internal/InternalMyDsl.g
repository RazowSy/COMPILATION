/*
 * generated by Xtext 2.10.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;

    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Program";
   	}

   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleProgram
entryRuleProgram returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProgramRule()); }
	iv_ruleProgram=ruleProgram
	{ $current=$iv_ruleProgram.current; }
	EOF;

// Rule Program
ruleProgram returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getProgramAccess().getFonctionsFonctionParserRuleCall_0());
			}
			lv_fonctions_0_0=ruleFonction
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getProgramRule());
				}
				add(
					$current,
					"fonctions",
					lv_fonctions_0_0,
					"org.xtext.example.mydsl.MyDsl.Fonction");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleFonction
entryRuleFonction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFonctionRule()); }
	iv_ruleFonction=ruleFonction
	{ $current=$iv_ruleFonction.current; }
	EOF;

// Rule Fonction
ruleFonction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='function'
		{
			newLeafNode(otherlv_0, grammarAccess.getFonctionAccess().getFunctionKeyword_0());
		}
		(
			(
				lv_nom_1_0=RULE_SYMBOL
				{
					newLeafNode(lv_nom_1_0, grammarAccess.getFonctionAccess().getNomSYMBOLTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFonctionRule());
					}
					setWithLastConsumed(
						$current,
						"nom",
						lv_nom_1_0,
						"org.xtext.example.mydsl.MyDsl.SYMBOL");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getFonctionAccess().getColonKeyword_2());
		}
		otherlv_3='read'
		{
			newLeafNode(otherlv_3, grammarAccess.getFonctionAccess().getReadKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFonctionAccess().getInInputParserRuleCall_4_0());
				}
				lv_in_4_0=ruleInput
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFonctionRule());
					}
					set(
						$current,
						"in",
						lv_in_4_0,
						"org.xtext.example.mydsl.MyDsl.Input");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='%'
		{
			newLeafNode(otherlv_5, grammarAccess.getFonctionAccess().getPercentSignKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFonctionAccess().getCommandesCommandesParserRuleCall_6_0());
				}
				lv_commandes_6_0=ruleCommandes
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFonctionRule());
					}
					set(
						$current,
						"commandes",
						lv_commandes_6_0,
						"org.xtext.example.mydsl.MyDsl.Commandes");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='%'
		{
			newLeafNode(otherlv_7, grammarAccess.getFonctionAccess().getPercentSignKeyword_7());
		}
		otherlv_8='write'
		{
			newLeafNode(otherlv_8, grammarAccess.getFonctionAccess().getWriteKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFonctionAccess().getOutOutputParserRuleCall_9_0());
				}
				lv_out_9_0=ruleOutput
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFonctionRule());
					}
					set(
						$current,
						"out",
						lv_out_9_0,
						"org.xtext.example.mydsl.MyDsl.Output");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCommandes
entryRuleCommandes returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommandesRule()); }
	iv_ruleCommandes=ruleCommandes
	{ $current=$iv_ruleCommandes.current; }
	EOF;

// Rule Commandes
ruleCommandes returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCommandesAccess().getCommandeCommandeParserRuleCall_0_0());
				}
				lv_commande_0_0=ruleCommande
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCommandesRule());
					}
					set(
						$current,
						"commande",
						lv_commande_0_0,
						"org.xtext.example.mydsl.MyDsl.Commande");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			this_SEP_1=RULE_SEP
			{
				newLeafNode(this_SEP_1, grammarAccess.getCommandesAccess().getSEPTerminalRuleCall_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCommandesAccess().getCommandesCommandeParserRuleCall_1_1_0());
					}
					lv_commandes_2_0=ruleCommande
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCommandesRule());
						}
						add(
							$current,
							"commandes",
							lv_commandes_2_0,
							"org.xtext.example.mydsl.MyDsl.Commande");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleCommande
entryRuleCommande returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommandeRule()); }
	iv_ruleCommande=ruleCommande
	{ $current=$iv_ruleCommande.current; }
	EOF;

// Rule Commande
ruleCommande returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCommandeAccess().getCommandeNopParserRuleCall_0_0());
				}
				lv_commande_0_0=ruleNop
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCommandeRule());
					}
					set(
						$current,
						"commande",
						lv_commande_0_0,
						"org.xtext.example.mydsl.MyDsl.Nop");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getCommandeAccess().getCommandeAffectationParserRuleCall_1_0());
				}
				lv_commande_1_0=ruleAffectation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCommandeRule());
					}
					set(
						$current,
						"commande",
						lv_commande_1_0,
						"org.xtext.example.mydsl.MyDsl.Affectation");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getCommandeAccess().getCommandeIfParserRuleCall_2_0());
				}
				lv_commande_2_0=ruleIf
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCommandeRule());
					}
					set(
						$current,
						"commande",
						lv_commande_2_0,
						"org.xtext.example.mydsl.MyDsl.If");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getCommandeAccess().getCommandeWhileParserRuleCall_3_0());
				}
				lv_commande_3_0=ruleWhile
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCommandeRule());
					}
					set(
						$current,
						"commande",
						lv_commande_3_0,
						"org.xtext.example.mydsl.MyDsl.While");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getCommandeAccess().getCommandeForParserRuleCall_4_0());
				}
				lv_commande_4_0=ruleFor
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCommandeRule());
					}
					set(
						$current,
						"commande",
						lv_commande_4_0,
						"org.xtext.example.mydsl.MyDsl.For");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getCommandeAccess().getCommandeForEachParserRuleCall_5_0());
				}
				lv_commande_5_0=ruleForEach
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCommandeRule());
					}
					set(
						$current,
						"commande",
						lv_commande_5_0,
						"org.xtext.example.mydsl.MyDsl.ForEach");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAffectation
entryRuleAffectation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAffectationRule()); }
	iv_ruleAffectation=ruleAffectation
	{ $current=$iv_ruleAffectation.current; }
	EOF;

// Rule Affectation
ruleAffectation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getAffectationAccess().getVariableVariableParserRuleCall_0_0_0());
					}
					lv_variable_0_0=ruleVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAffectationRule());
						}
						add(
							$current,
							"variable",
							lv_variable_0_0,
							"org.xtext.example.mydsl.MyDsl.Variable");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_1=','
				{
					newLeafNode(otherlv_1, grammarAccess.getAffectationAccess().getCommaKeyword_0_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getAffectationAccess().getVariableVariableParserRuleCall_0_1_1_0());
						}
						lv_variable_2_0=ruleVariable
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAffectationRule());
							}
							add(
								$current,
								"variable",
								lv_variable_2_0,
								"org.xtext.example.mydsl.MyDsl.Variable");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		otherlv_3=':='
		{
			newLeafNode(otherlv_3, grammarAccess.getAffectationAccess().getColonEqualsSignKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getAffectationAccess().getElmExpressionParserRuleCall_2_0_0());
					}
					lv_elm_4_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAffectationRule());
						}
						add(
							$current,
							"elm",
							lv_elm_4_0,
							"org.xtext.example.mydsl.MyDsl.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=','
				{
					newLeafNode(otherlv_5, grammarAccess.getAffectationAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getAffectationAccess().getElmExpressionParserRuleCall_2_1_1_0());
						}
						lv_elm_6_0=ruleExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAffectationRule());
							}
							add(
								$current,
								"elm",
								lv_elm_6_0,
								"org.xtext.example.mydsl.MyDsl.Expression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
	)
;

// Entry rule entryRuleIf
entryRuleIf returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfRule()); }
	iv_ruleIf=ruleIf
	{ $current=$iv_ruleIf.current; }
	EOF;

// Rule If
ruleIf returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getIfAccess().getIfKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfAccess().getCondExpressionParserRuleCall_1_0());
				}
				lv_cond_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfRule());
					}
					set(
						$current,
						"cond",
						lv_cond_1_0,
						"org.xtext.example.mydsl.MyDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='then'
		{
			newLeafNode(otherlv_2, grammarAccess.getIfAccess().getThenKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfAccess().getCmdsIfCommandesParserRuleCall_3_0());
				}
				lv_cmdsIf_3_0=ruleCommandes
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfRule());
					}
					set(
						$current,
						"cmdsIf",
						lv_cmdsIf_3_0,
						"org.xtext.example.mydsl.MyDsl.Commandes");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='else'
			{
				newLeafNode(otherlv_4, grammarAccess.getIfAccess().getElseKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIfAccess().getCmdsElseCommandesParserRuleCall_4_1_0());
					}
					lv_cmdsElse_5_0=ruleCommandes
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfRule());
						}
						set(
							$current,
							"cmdsElse",
							lv_cmdsElse_5_0,
							"org.xtext.example.mydsl.MyDsl.Commandes");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_6='fi'
		{
			newLeafNode(otherlv_6, grammarAccess.getIfAccess().getFiKeyword_5());
		}
	)
;

// Entry rule entryRuleWhile
entryRuleWhile returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWhileRule()); }
	iv_ruleWhile=ruleWhile
	{ $current=$iv_ruleWhile.current; }
	EOF;

// Rule While
ruleWhile returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='while'
		{
			newLeafNode(otherlv_0, grammarAccess.getWhileAccess().getWhileKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWhileAccess().getCondExpressionParserRuleCall_1_0());
				}
				lv_cond_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhileRule());
					}
					set(
						$current,
						"cond",
						lv_cond_1_0,
						"org.xtext.example.mydsl.MyDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='do'
		{
			newLeafNode(otherlv_2, grammarAccess.getWhileAccess().getDoKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWhileAccess().getCmdsWhCommandesParserRuleCall_3_0());
				}
				lv_cmdsWh_3_0=ruleCommandes
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhileRule());
					}
					set(
						$current,
						"cmdsWh",
						lv_cmdsWh_3_0,
						"org.xtext.example.mydsl.MyDsl.Commandes");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='od'
		{
			newLeafNode(otherlv_4, grammarAccess.getWhileAccess().getOdKeyword_4());
		}
	)
;

// Entry rule entryRuleFor
entryRuleFor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForRule()); }
	iv_ruleFor=ruleFor
	{ $current=$iv_ruleFor.current; }
	EOF;

// Rule For
ruleFor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='for'
		{
			newLeafNode(otherlv_0, grammarAccess.getForAccess().getForKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForAccess().getCondExpressionParserRuleCall_1_0());
				}
				lv_cond_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForRule());
					}
					set(
						$current,
						"cond",
						lv_cond_1_0,
						"org.xtext.example.mydsl.MyDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='do'
		{
			newLeafNode(otherlv_2, grammarAccess.getForAccess().getDoKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForAccess().getCmdsForCommandesParserRuleCall_3_0());
				}
				lv_cmdsFor_3_0=ruleCommandes
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForRule());
					}
					set(
						$current,
						"cmdsFor",
						lv_cmdsFor_3_0,
						"org.xtext.example.mydsl.MyDsl.Commandes");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='od'
		{
			newLeafNode(otherlv_4, grammarAccess.getForAccess().getOdKeyword_4());
		}
	)
;

// Entry rule entryRuleForEach
entryRuleForEach returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForEachRule()); }
	iv_ruleForEach=ruleForEach
	{ $current=$iv_ruleForEach.current; }
	EOF;

// Rule ForEach
ruleForEach returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='foreach'
		{
			newLeafNode(otherlv_0, grammarAccess.getForEachAccess().getForeachKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForEachAccess().getElemExpressionParserRuleCall_1_0());
				}
				lv_elem_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForEachRule());
					}
					set(
						$current,
						"elem",
						lv_elem_1_0,
						"org.xtext.example.mydsl.MyDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='in'
		{
			newLeafNode(otherlv_2, grammarAccess.getForEachAccess().getInKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForEachAccess().getEnsembleExpressionParserRuleCall_3_0());
				}
				lv_ensemble_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForEachRule());
					}
					set(
						$current,
						"ensemble",
						lv_ensemble_3_0,
						"org.xtext.example.mydsl.MyDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='do'
		{
			newLeafNode(otherlv_4, grammarAccess.getForEachAccess().getDoKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForEachAccess().getCmdsForCommandesParserRuleCall_5_0());
				}
				lv_cmdsFor_5_0=ruleCommandes
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForEachRule());
					}
					set(
						$current,
						"cmdsFor",
						lv_cmdsFor_5_0,
						"org.xtext.example.mydsl.MyDsl.Commandes");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='od'
		{
			newLeafNode(otherlv_6, grammarAccess.getForEachAccess().getOdKeyword_6());
		}
	)
;

// Entry rule entryRuleNop
entryRuleNop returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNopRule()); }
	iv_ruleNop=ruleNop
	{ $current=$iv_ruleNop.current; }
	EOF;

// Rule Nop
ruleNop returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_nop_0_0='nop'
			{
				newLeafNode(lv_nop_0_0, grammarAccess.getNopAccess().getNopNopKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getNopRule());
				}
				setWithLastConsumed($current, "nop", lv_nop_0_0, "nop");
			}
		)
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			((
				ruleCondition
			)
			)=>
			(
				{
					newCompositeNode(grammarAccess.getExpressionAccess().getCondConditionParserRuleCall_0_0());
				}
				lv_cond_0_0=ruleCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpressionRule());
					}
					set(
						$current,
						"cond",
						lv_cond_0_0,
						"org.xtext.example.mydsl.MyDsl.Condition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getExpressionAccess().getExprsExprSimpleParserRuleCall_1_0());
				}
				lv_exprs_1_0=ruleExprSimple
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExpressionRule());
					}
					set(
						$current,
						"exprs",
						lv_exprs_1_0,
						"org.xtext.example.mydsl.MyDsl.ExprSimple");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExprSimple
entryRuleExprSimple returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExprSimpleRule()); }
	iv_ruleExprSimple=ruleExprSimple
	{ $current=$iv_ruleExprSimple.current; }
	EOF;

// Rule ExprSimple
ruleExprSimple returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getExprSimpleAccess().getNilNillParserRuleCall_0_0());
				}
				lv_nil_0_0=ruleNill
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExprSimpleRule());
					}
					set(
						$current,
						"nil",
						lv_nil_0_0,
						"org.xtext.example.mydsl.MyDsl.Nill");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getExprSimpleAccess().getVariableVariableParserRuleCall_1_0());
				}
				lv_variable_1_0=ruleVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExprSimpleRule());
					}
					set(
						$current,
						"variable",
						lv_variable_1_0,
						"org.xtext.example.mydsl.MyDsl.Variable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getExprSimpleAccess().getAbinABinParserRuleCall_2_0());
				}
				lv_abin_2_0=ruleABin
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExprSimpleRule());
					}
					set(
						$current,
						"abin",
						lv_abin_2_0,
						"org.xtext.example.mydsl.MyDsl.ABin");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				lv_symb_3_0=RULE_SYMBOL
				{
					newLeafNode(lv_symb_3_0, grammarAccess.getExprSimpleAccess().getSymbSYMBOLTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExprSimpleRule());
					}
					setWithLastConsumed(
						$current,
						"symb",
						lv_symb_3_0,
						"org.xtext.example.mydsl.MyDsl.SYMBOL");
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getExprSimpleAccess().getAccsuccAccSuccParserRuleCall_4_0());
				}
				lv_accsucc_4_0=ruleAccSucc
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExprSimpleRule());
					}
					set(
						$current,
						"accsucc",
						lv_accsucc_4_0,
						"org.xtext.example.mydsl.MyDsl.AccSucc");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getExprSimpleAccess().getElemSimpleElemSimpleParserRuleCall_5_0());
				}
				lv_elemSimple_5_0=ruleElemSimple
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExprSimpleRule());
					}
					set(
						$current,
						"elemSimple",
						lv_elemSimple_5_0,
						"org.xtext.example.mydsl.MyDsl.ElemSimple");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleVariable
entryRuleVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableRule()); }
	iv_ruleVariable=ruleVariable
	{ $current=$iv_ruleVariable.current; }
	EOF;

// Rule Variable
ruleVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_variable_0_0=RULE_MAJ
			{
				newLeafNode(lv_variable_0_0, grammarAccess.getVariableAccess().getVariableMAJTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getVariableRule());
				}
				setWithLastConsumed(
					$current,
					"variable",
					lv_variable_0_0,
					"org.xtext.example.mydsl.MyDsl.MAJ");
			}
		)
	)
;

// Entry rule entryRuleLexpr
entryRuleLexpr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLexprRule()); }
	iv_ruleLexpr=ruleLexpr
	{ $current=$iv_ruleLexpr.current; }
	EOF;

// Rule Lexpr
ruleLexpr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getLexprAccess().getE1ExprSimpleParserRuleCall_0_0());
				}
				lv_e1_0_0=ruleExprSimple
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLexprRule());
					}
					set(
						$current,
						"e1",
						lv_e1_0_0,
						"org.xtext.example.mydsl.MyDsl.ExprSimple");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLexprAccess().getLexprLexprParserRuleCall_1_0());
				}
				lv_lexpr_1_0=ruleLexpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLexprRule());
					}
					set(
						$current,
						"lexpr",
						lv_lexpr_1_0,
						"org.xtext.example.mydsl.MyDsl.Lexpr");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleElemSimple
entryRuleElemSimple returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElemSimpleRule()); }
	iv_ruleElemSimple=ruleElemSimple
	{ $current=$iv_ruleElemSimple.current; }
	EOF;

// Rule ElemSimple
ruleElemSimple returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getElemSimpleAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				lv_symb_1_0=RULE_SYMBOL
				{
					newLeafNode(lv_symb_1_0, grammarAccess.getElemSimpleAccess().getSymbSYMBOLTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElemSimpleRule());
					}
					setWithLastConsumed(
						$current,
						"symb",
						lv_symb_1_0,
						"org.xtext.example.mydsl.MyDsl.SYMBOL");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getElemSimpleAccess().getLexprLexprParserRuleCall_2_0());
				}
				lv_lexpr_2_0=ruleLexpr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElemSimpleRule());
					}
					set(
						$current,
						"lexpr",
						lv_lexpr_2_0,
						"org.xtext.example.mydsl.MyDsl.Lexpr");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getElemSimpleAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleCondition
entryRuleCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionRule()); }
	iv_ruleCondition=ruleCondition
	{ $current=$iv_ruleCondition.current; }
	EOF;

// Rule Condition
ruleCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getConditionAccess().getNotParserRuleCall_0_0());
			}
			this_Not_0=ruleNot
			{
				$current = $this_Not_0.current;
				afterParserOrEnumRuleCall();
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConditionAccess().getExprExpressionParserRuleCall_0_1_0());
					}
					lv_expr_1_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConditionRule());
						}
						set(
							$current,
							"expr",
							lv_expr_1_0,
							"org.xtext.example.mydsl.MyDsl.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getConditionAccess().getE1ExprSimpleParserRuleCall_1_0_0());
					}
					lv_e1_2_0=ruleExprSimple
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConditionRule());
						}
						set(
							$current,
							"e1",
							lv_e1_2_0,
							"org.xtext.example.mydsl.MyDsl.ExprSimple");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getConditionAccess().getCompCOMPARATEURParserRuleCall_1_1_0());
					}
					lv_comp_3_0=ruleCOMPARATEUR
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConditionRule());
						}
						set(
							$current,
							"comp",
							lv_comp_3_0,
							"org.xtext.example.mydsl.MyDsl.COMPARATEUR");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getConditionAccess().getE2ExpressionParserRuleCall_1_2_0());
					}
					lv_e2_4_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConditionRule());
						}
						set(
							$current,
							"e2",
							lv_e2_4_0,
							"org.xtext.example.mydsl.MyDsl.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleABin
entryRuleABin returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getABinRule()); }
	iv_ruleABin=ruleABin
	{ $current=$iv_ruleABin.current; }
	EOF;

// Rule ABin
ruleABin returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getABinAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getABinAccess().getOpOpConstructeurParserRuleCall_1_0());
				}
				lv_op_1_0=ruleOpConstructeur
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getABinRule());
					}
					set(
						$current,
						"op",
						lv_op_1_0,
						"org.xtext.example.mydsl.MyDsl.OpConstructeur");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getABinAccess().getE1ExpressionParserRuleCall_2_0());
				}
				lv_e1_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getABinRule());
					}
					set(
						$current,
						"e1",
						lv_e1_2_0,
						"org.xtext.example.mydsl.MyDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getABinAccess().getE2ExpressionParserRuleCall_3_0());
				}
				lv_e2_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getABinRule());
					}
					set(
						$current,
						"e2",
						lv_e2_3_0,
						"org.xtext.example.mydsl.MyDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getABinAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleAccSucc
entryRuleAccSucc returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAccSuccRule()); }
	iv_ruleAccSucc=ruleAccSucc
	{ $current=$iv_ruleAccSucc.current; }
	EOF;

// Rule AccSucc
ruleAccSucc returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getAccSuccAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAccSuccAccess().getOpOpAccSuccParserRuleCall_1_0());
				}
				lv_op_1_0=ruleOpAccSucc
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAccSuccRule());
					}
					set(
						$current,
						"op",
						lv_op_1_0,
						"org.xtext.example.mydsl.MyDsl.OpAccSucc");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAccSuccAccess().getExprExprSimpleParserRuleCall_2_0());
				}
				lv_expr_2_0=ruleExprSimple
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAccSuccRule());
					}
					set(
						$current,
						"expr",
						lv_expr_2_0,
						"org.xtext.example.mydsl.MyDsl.ExprSimple");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getAccSuccAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleOutput
entryRuleOutput returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOutputRule()); }
	iv_ruleOutput=ruleOutput
	{ $current=$iv_ruleOutput.current; }
	EOF;

// Rule Output
ruleOutput returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_out_0_0=RULE_MAJ
				{
					newLeafNode(lv_out_0_0, grammarAccess.getOutputAccess().getOutMAJTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOutputRule());
					}
					addWithLastConsumed(
						$current,
						"out",
						lv_out_0_0,
						"org.xtext.example.mydsl.MyDsl.MAJ");
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getOutputAccess().getCommaKeyword_1_0());
			}
			(
				(
					lv_out_2_0=RULE_MAJ
					{
						newLeafNode(lv_out_2_0, grammarAccess.getOutputAccess().getOutMAJTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOutputRule());
						}
						addWithLastConsumed(
							$current,
							"out",
							lv_out_2_0,
							"org.xtext.example.mydsl.MyDsl.MAJ");
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleInput
entryRuleInput returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInputRule()); }
	iv_ruleInput=ruleInput
	{ $current=$iv_ruleInput.current; }
	EOF;

// Rule Input
ruleInput returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_in_0_0=RULE_MAJ
				{
					newLeafNode(lv_in_0_0, grammarAccess.getInputAccess().getInMAJTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInputRule());
					}
					addWithLastConsumed(
						$current,
						"in",
						lv_in_0_0,
						"org.xtext.example.mydsl.MyDsl.MAJ");
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getInputAccess().getCommaKeyword_1_0());
			}
			(
				(
					lv_in_2_0=RULE_MAJ
					{
						newLeafNode(lv_in_2_0, grammarAccess.getInputAccess().getInMAJTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getInputRule());
						}
						addWithLastConsumed(
							$current,
							"in",
							lv_in_2_0,
							"org.xtext.example.mydsl.MyDsl.MAJ");
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleNill
entryRuleNill returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNillRule()); }
	iv_ruleNill=ruleNill
	{ $current=$iv_ruleNill.current; }
	EOF;

// Rule Nill
ruleNill returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_nil_0_0='nil'
			{
				newLeafNode(lv_nil_0_0, grammarAccess.getNillAccess().getNilNilKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getNillRule());
				}
				setWithLastConsumed($current, "nil", lv_nil_0_0, "nil");
			}
		)
	)
;

// Entry rule entryRuleOpAccSucc
entryRuleOpAccSucc returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOpAccSuccRule()); }
	iv_ruleOpAccSucc=ruleOpAccSucc
	{ $current=$iv_ruleOpAccSucc.current; }
	EOF;

// Rule OpAccSucc
ruleOpAccSucc returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getOpAccSuccAccess().getOpAccSuccAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_op_1_0='hd'
					{
						newLeafNode(lv_op_1_0, grammarAccess.getOpAccSuccAccess().getOpHdKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOpAccSuccRule());
						}
						setWithLastConsumed($current, "op", lv_op_1_0, "hd");
					}
				)
			)
			    |
			(
				(
					lv_op_2_0='tl'
					{
						newLeafNode(lv_op_2_0, grammarAccess.getOpAccSuccAccess().getOpTlKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOpAccSuccRule());
						}
						setWithLastConsumed($current, "op", lv_op_2_0, "tl");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleNot
entryRuleNot returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNotRule()); }
	iv_ruleNot=ruleNot
	{ $current=$iv_ruleNot.current; }
	EOF;

// Rule Not
ruleNot returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_not_0_0='not'
			{
				newLeafNode(lv_not_0_0, grammarAccess.getNotAccess().getNotNotKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getNotRule());
				}
				setWithLastConsumed($current, "not", lv_not_0_0, "not");
			}
		)
	)
;

// Entry rule entryRuleOpConstructeur
entryRuleOpConstructeur returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOpConstructeurRule()); }
	iv_ruleOpConstructeur=ruleOpConstructeur
	{ $current=$iv_ruleOpConstructeur.current; }
	EOF;

// Rule OpConstructeur
ruleOpConstructeur returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getOpConstructeurAccess().getOpConstructeurAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_op_1_0='cons'
					{
						newLeafNode(lv_op_1_0, grammarAccess.getOpConstructeurAccess().getOpConsKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOpConstructeurRule());
						}
						setWithLastConsumed($current, "op", lv_op_1_0, "cons");
					}
				)
			)
			    |
			(
				(
					lv_op_2_0='list'
					{
						newLeafNode(lv_op_2_0, grammarAccess.getOpConstructeurAccess().getOpListKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOpConstructeurRule());
						}
						setWithLastConsumed($current, "op", lv_op_2_0, "list");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleCOMPARATEUR
entryRuleCOMPARATEUR returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCOMPARATEURRule()); }
	iv_ruleCOMPARATEUR=ruleCOMPARATEUR
	{ $current=$iv_ruleCOMPARATEUR.current; }
	EOF;

// Rule COMPARATEUR
ruleCOMPARATEUR returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_comparateur_0_0='=?'
				{
					newLeafNode(lv_comparateur_0_0, grammarAccess.getCOMPARATEURAccess().getComparateurEqualsSignQuestionMarkKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCOMPARATEURRule());
					}
					setWithLastConsumed($current, "comparateur", lv_comparateur_0_0, "=?");
				}
			)
		)
		    |
		(
			(
				lv_comparateur_1_0='or'
				{
					newLeafNode(lv_comparateur_1_0, grammarAccess.getCOMPARATEURAccess().getComparateurOrKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCOMPARATEURRule());
					}
					setWithLastConsumed($current, "comparateur", lv_comparateur_1_0, "or");
				}
			)
		)
		    |
		(
			(
				lv_comparateur_2_0='and'
				{
					newLeafNode(lv_comparateur_2_0, grammarAccess.getCOMPARATEURAccess().getComparateurAndKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCOMPARATEURRule());
					}
					setWithLastConsumed($current, "comparateur", lv_comparateur_2_0, "and");
				}
			)
		)
	)
;

RULE_SEP : ';';

RULE_MAJ : 'A'..'Z' ('A'..'Z'|'a'..'z')*;

RULE_SYMBOL : 'a'..'z' ('A'..'Z'|'a'..'z'|'0'..'9')* ((('-'|'+'|'.'|'/'|'_'|'&')|'->') ('0'..'9'|'a'..'z'|'A'..'Z')+)* ('?'|'!')?;

RULE_ESPACE : '\n';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
