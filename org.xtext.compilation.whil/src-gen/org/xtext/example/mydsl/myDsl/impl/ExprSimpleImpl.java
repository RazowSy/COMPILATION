/**
 * generated by Xtext 2.10.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.myDsl.ABin;
import org.xtext.example.mydsl.myDsl.AccSucc;
import org.xtext.example.mydsl.myDsl.ElemSimple;
import org.xtext.example.mydsl.myDsl.ExprSimple;
import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.Nill;
import org.xtext.example.mydsl.myDsl.Variable;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Expr Simple</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ExprSimpleImpl#getNil <em>Nil</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ExprSimpleImpl#getVariable <em>Variable</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ExprSimpleImpl#getAbin <em>Abin</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ExprSimpleImpl#getSymb <em>Symb</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ExprSimpleImpl#getAccsucc <em>Accsucc</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ExprSimpleImpl#getElemSimple <em>Elem Simple</em>}</li>
 * </ul>
 * </p>
 *
 * @generated
 */
public class ExprSimpleImpl extends MinimalEObjectImpl.Container implements ExprSimple
{
  /**
   * The cached value of the '{@link #getNil() <em>Nil</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNil()
   * @generated
   * @ordered
   */
  protected Nill nil;

  /**
   * The cached value of the '{@link #getVariable() <em>Variable</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVariable()
   * @generated
   * @ordered
   */
  protected Variable variable;

  /**
   * The cached value of the '{@link #getAbin() <em>Abin</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAbin()
   * @generated
   * @ordered
   */
  protected ABin abin;

  /**
   * The default value of the '{@link #getSymb() <em>Symb</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSymb()
   * @generated
   * @ordered
   */
  protected static final String SYMB_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSymb() <em>Symb</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSymb()
   * @generated
   * @ordered
   */
  protected String symb = SYMB_EDEFAULT;

  /**
   * The cached value of the '{@link #getAccsucc() <em>Accsucc</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAccsucc()
   * @generated
   * @ordered
   */
  protected AccSucc accsucc;

  /**
   * The cached value of the '{@link #getElemSimple() <em>Elem Simple</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getElemSimple()
   * @generated
   * @ordered
   */
  protected ElemSimple elemSimple;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ExprSimpleImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.EXPR_SIMPLE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Nill getNil()
  {
    return nil;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetNil(Nill newNil, NotificationChain msgs)
  {
    Nill oldNil = nil;
    nil = newNil;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.EXPR_SIMPLE__NIL, oldNil, newNil);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNil(Nill newNil)
  {
    if (newNil != nil)
    {
      NotificationChain msgs = null;
      if (nil != null)
        msgs = ((InternalEObject)nil).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.EXPR_SIMPLE__NIL, null, msgs);
      if (newNil != null)
        msgs = ((InternalEObject)newNil).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.EXPR_SIMPLE__NIL, null, msgs);
      msgs = basicSetNil(newNil, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.EXPR_SIMPLE__NIL, newNil, newNil));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Variable getVariable()
  {
    return variable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetVariable(Variable newVariable, NotificationChain msgs)
  {
    Variable oldVariable = variable;
    variable = newVariable;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.EXPR_SIMPLE__VARIABLE, oldVariable, newVariable);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setVariable(Variable newVariable)
  {
    if (newVariable != variable)
    {
      NotificationChain msgs = null;
      if (variable != null)
        msgs = ((InternalEObject)variable).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.EXPR_SIMPLE__VARIABLE, null, msgs);
      if (newVariable != null)
        msgs = ((InternalEObject)newVariable).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.EXPR_SIMPLE__VARIABLE, null, msgs);
      msgs = basicSetVariable(newVariable, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.EXPR_SIMPLE__VARIABLE, newVariable, newVariable));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ABin getAbin()
  {
    return abin;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAbin(ABin newAbin, NotificationChain msgs)
  {
    ABin oldAbin = abin;
    abin = newAbin;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.EXPR_SIMPLE__ABIN, oldAbin, newAbin);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAbin(ABin newAbin)
  {
    if (newAbin != abin)
    {
      NotificationChain msgs = null;
      if (abin != null)
        msgs = ((InternalEObject)abin).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.EXPR_SIMPLE__ABIN, null, msgs);
      if (newAbin != null)
        msgs = ((InternalEObject)newAbin).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.EXPR_SIMPLE__ABIN, null, msgs);
      msgs = basicSetAbin(newAbin, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.EXPR_SIMPLE__ABIN, newAbin, newAbin));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getSymb()
  {
    return symb;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSymb(String newSymb)
  {
    String oldSymb = symb;
    symb = newSymb;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.EXPR_SIMPLE__SYMB, oldSymb, symb));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AccSucc getAccsucc()
  {
    return accsucc;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAccsucc(AccSucc newAccsucc, NotificationChain msgs)
  {
    AccSucc oldAccsucc = accsucc;
    accsucc = newAccsucc;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.EXPR_SIMPLE__ACCSUCC, oldAccsucc, newAccsucc);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAccsucc(AccSucc newAccsucc)
  {
    if (newAccsucc != accsucc)
    {
      NotificationChain msgs = null;
      if (accsucc != null)
        msgs = ((InternalEObject)accsucc).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.EXPR_SIMPLE__ACCSUCC, null, msgs);
      if (newAccsucc != null)
        msgs = ((InternalEObject)newAccsucc).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.EXPR_SIMPLE__ACCSUCC, null, msgs);
      msgs = basicSetAccsucc(newAccsucc, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.EXPR_SIMPLE__ACCSUCC, newAccsucc, newAccsucc));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ElemSimple getElemSimple()
  {
    return elemSimple;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetElemSimple(ElemSimple newElemSimple, NotificationChain msgs)
  {
    ElemSimple oldElemSimple = elemSimple;
    elemSimple = newElemSimple;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.EXPR_SIMPLE__ELEM_SIMPLE, oldElemSimple, newElemSimple);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setElemSimple(ElemSimple newElemSimple)
  {
    if (newElemSimple != elemSimple)
    {
      NotificationChain msgs = null;
      if (elemSimple != null)
        msgs = ((InternalEObject)elemSimple).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.EXPR_SIMPLE__ELEM_SIMPLE, null, msgs);
      if (newElemSimple != null)
        msgs = ((InternalEObject)newElemSimple).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.EXPR_SIMPLE__ELEM_SIMPLE, null, msgs);
      msgs = basicSetElemSimple(newElemSimple, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.EXPR_SIMPLE__ELEM_SIMPLE, newElemSimple, newElemSimple));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.EXPR_SIMPLE__NIL:
        return basicSetNil(null, msgs);
      case MyDslPackage.EXPR_SIMPLE__VARIABLE:
        return basicSetVariable(null, msgs);
      case MyDslPackage.EXPR_SIMPLE__ABIN:
        return basicSetAbin(null, msgs);
      case MyDslPackage.EXPR_SIMPLE__ACCSUCC:
        return basicSetAccsucc(null, msgs);
      case MyDslPackage.EXPR_SIMPLE__ELEM_SIMPLE:
        return basicSetElemSimple(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.EXPR_SIMPLE__NIL:
        return getNil();
      case MyDslPackage.EXPR_SIMPLE__VARIABLE:
        return getVariable();
      case MyDslPackage.EXPR_SIMPLE__ABIN:
        return getAbin();
      case MyDslPackage.EXPR_SIMPLE__SYMB:
        return getSymb();
      case MyDslPackage.EXPR_SIMPLE__ACCSUCC:
        return getAccsucc();
      case MyDslPackage.EXPR_SIMPLE__ELEM_SIMPLE:
        return getElemSimple();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.EXPR_SIMPLE__NIL:
        setNil((Nill)newValue);
        return;
      case MyDslPackage.EXPR_SIMPLE__VARIABLE:
        setVariable((Variable)newValue);
        return;
      case MyDslPackage.EXPR_SIMPLE__ABIN:
        setAbin((ABin)newValue);
        return;
      case MyDslPackage.EXPR_SIMPLE__SYMB:
        setSymb((String)newValue);
        return;
      case MyDslPackage.EXPR_SIMPLE__ACCSUCC:
        setAccsucc((AccSucc)newValue);
        return;
      case MyDslPackage.EXPR_SIMPLE__ELEM_SIMPLE:
        setElemSimple((ElemSimple)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.EXPR_SIMPLE__NIL:
        setNil((Nill)null);
        return;
      case MyDslPackage.EXPR_SIMPLE__VARIABLE:
        setVariable((Variable)null);
        return;
      case MyDslPackage.EXPR_SIMPLE__ABIN:
        setAbin((ABin)null);
        return;
      case MyDslPackage.EXPR_SIMPLE__SYMB:
        setSymb(SYMB_EDEFAULT);
        return;
      case MyDslPackage.EXPR_SIMPLE__ACCSUCC:
        setAccsucc((AccSucc)null);
        return;
      case MyDslPackage.EXPR_SIMPLE__ELEM_SIMPLE:
        setElemSimple((ElemSimple)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.EXPR_SIMPLE__NIL:
        return nil != null;
      case MyDslPackage.EXPR_SIMPLE__VARIABLE:
        return variable != null;
      case MyDslPackage.EXPR_SIMPLE__ABIN:
        return abin != null;
      case MyDslPackage.EXPR_SIMPLE__SYMB:
        return SYMB_EDEFAULT == null ? symb != null : !SYMB_EDEFAULT.equals(symb);
      case MyDslPackage.EXPR_SIMPLE__ACCSUCC:
        return accsucc != null;
      case MyDslPackage.EXPR_SIMPLE__ELEM_SIMPLE:
        return elemSimple != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (symb: ");
    result.append(symb);
    result.append(')');
    return result.toString();
  }

} //ExprSimpleImpl
